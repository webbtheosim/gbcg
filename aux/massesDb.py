mdef    = 10.0
massMap = {\
'h' : 1.00797,
'he' : 4.00260,
'li' : 6.941,
'be' : 9.01218,
'b' : 10.81,
'c' : 12.011,
'n' : 14.0067,
'o' : 15.9994,
'f' : 18.998403,
'ne' : 20.179,
'na' : 22.98977,
'mg' : 24.305,
'al' : 26.98154,
'si' : 28.0855,
'p' : 30.97376,
's' : 32.06,
'cl' : 35.453,
'k' : 39.0983,
'ar' : 39.948,
'ca' : 40.08,
'sc' : 44.9559,
'ti' : 47.90,
'v' : 50.9415,
'cr' : 51.996,
'mn' : 54.9380,
'fe' : 55.847,
'ni' : 58.70,
'co' : 58.9332,
'cu' : 63.546,
'zn' : 65.38,
'ga' : 69.72,
'ge' : 72.59,
'as' : 74.9216,
'se' : 78.96,
'br' : 79.904,
'kr' : 83.80,
'rb' : 85.4678,
'sr' : 87.62,
'y' : 88.9059,
'zr' : 91.22,
'nb' : 92.9064,
'mo' : 95.94,
'tc' : 98.0,
'ru' : 101.07,
'rh' : 102.9055,
'pd' : 106.4,
'ag' : 107.868,
'cd' : 112.41,
'in' : 114.82,
'sn' : 118.69,
'sb' : 121.75,
'i' : 126.9045,
'te' : 127.60,
'xe' : 131.30,
'cs' : 132.9054,
'ba' : 137.33,
'la' : 138.9055,
'ce' : 140.12,
'pr' : 140.9077,
'nd' : 144.24,
'pm' : 145.0,
'sm' : 150.4,
'eu' : 151.96,
'gd' : 157.25,
'tb' : 158.9254,
'dy' : 162.50,
'ho' : 164.9304,
'er' : 167.26,
'tm' : 168.9342,
'yb' : 173.04,
'lu' : 174.967,
'hf' : 178.49,
'ta' : 180.9479,
'w' : 183.85,
're' : 186.207,
'os' : 190.2,
'ir' : 192.22,
'pt' : 195.09,
'au' : 196.9665,
'hg' : 200.59,
'tl' : 204.37,
'pb' : 207.2,
'bi' : 208.9804,
'po' : 209.0,
'at' : 210.0,
'rn' : 222.0,
'fr' : 223.0,
'ra' : 226.0254,
'ac' : 227.0278,
'pa' : 231.0359,
'th' : 232.0381,
'np' : 237.0482,
'u' : 238.029,
'pu' : 242.0,
'am' : 243.0,
'bk' : 247.0,
'cm' : 247.0,
'no' : 250.0,
'cf' : 251.0,
'es' : 252.0,
'hs' : 255.0,
'mt' : 256.0,
'fm' : 257.0,
'md' : 258.0,
'lr' : 260.0,
'rf' : 261.0,
'bh' : 262.0,
'db' : 262.0,
'sg' : 263.0,
'uun' : 269.0,
'uuu' : 272.0,
'uub' : 277.0}

def guess_mass(name):
  m = 0.0
  try:
    m = massMap[name.strip().lower()]
  except KeyError:
    elList = [int(el) if el.isdigit() else el for el in  list(name[::-1].strip().lower())]
    multiplier = 1
    for el in elList:
      if isinstance(el,int):
        multiplier = el
      else:
        try:
          m += (massMap[el]*multiplier)
        except KeyError:
          m += (mdef*multiplier)
        multiplier = 1
  return m

